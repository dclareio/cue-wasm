{"version":3,"file":"wasm_exec.slim-71097e48.js","sources":["../lib/wasm_exec.slim.cjs"],"sourcesContent":["// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n//\n// This file has been modified for use by the TinyGo compiler.\n\n(() => {\n\t// Map multiple JavaScript environments to a single common API,\n\t// preferring web standards over Node.js API.\n\t//\n\t// Environments considered:\n\t// - Browsers\n\t// - Node.js\n\t// - Electron\n\t// - Parcel\n\n\tif (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export Go (neither global, window nor self is defined)\");\n\t}\n\n\tif (!global.require && typeof require !== \"undefined\") {\n\t\tglobal.require = require;\n\t}\n\n\t// if (!global.fs && global.require) {\n\t// \tglobal.fs = require(\"fs\");\n\t// }\n\n\tconst enosys = () => {\n\t\tconst err = new Error(\"not implemented\");\n\t\terr.code = \"ENOSYS\";\n\t\treturn err;\n\t};\n\n\t// if (!global.fs) {\n\t// \tlet outputBuf = \"\";\n\t// \tglobal.fs = {\n\t// \t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t// \t\twriteSync(fd, buf) {\n\t// \t\t\toutputBuf += decoder.decode(buf);\n\t// \t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t// \t\t\tif (nl != -1) {\n\t// \t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t// \t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t// \t\t\t}\n\t// \t\t\treturn buf.length;\n\t// \t\t},\n\t// \t\twrite(fd, buf, offset, length, position, callback) {\n\t// \t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t// \t\t\t\tcallback(enosys());\n\t// \t\t\t\treturn;\n\t// \t\t\t}\n\t// \t\t\tconst n = this.writeSync(fd, buf);\n\t// \t\t\tcallback(null, n);\n\t// \t\t},\n\t// \t\tchmod(path, mode, callback) { callback(enosys()); },\n\t// \t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t// \t\tclose(fd, callback) { callback(enosys()); },\n\t// \t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t// \t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t// \t\tfstat(fd, callback) { callback(enosys()); },\n\t// \t\tfsync(fd, callback) { callback(null); },\n\t// \t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t// \t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t// \t\tlink(path, link, callback) { callback(enosys()); },\n\t// \t\tlstat(path, callback) { callback(enosys()); },\n\t// \t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t// \t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t// \t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t// \t\treaddir(path, callback) { callback(enosys()); },\n\t// \t\treadlink(path, callback) { callback(enosys()); },\n\t// \t\trename(from, to, callback) { callback(enosys()); },\n\t// \t\trmdir(path, callback) { callback(enosys()); },\n\t// \t\tstat(path, callback) { callback(enosys()); },\n\t// \t\tsymlink(path, link, callback) { callback(enosys()); },\n\t// \t\ttruncate(path, length, callback) { callback(enosys()); },\n\t// \t\tunlink(path, callback) { callback(enosys()); },\n\t// \t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t// \t};\n\t// }\n\n\tif (!global.process) {\n\t\tglobal.process = {\n\t\t\tgetuid() { return -1; },\n\t\t\tgetgid() { return -1; },\n\t\t\tgeteuid() { return -1; },\n\t\t\tgetegid() { return -1; },\n\t\t\tgetgroups() { throw enosys(); },\n\t\t\tpid: -1,\n\t\t\tppid: -1,\n\t\t\tumask() { throw enosys(); },\n\t\t\tcwd() { throw enosys(); },\n\t\t\tchdir() { throw enosys(); },\n\t\t}\n\t}\n\n\tif (!global.crypto) {\n\t\tconst nodeCrypto = require(\"crypto\");\n\t\tglobal.crypto = {\n\t\t\tgetRandomValues(b) {\n\t\t\t\tnodeCrypto.randomFillSync(b);\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!global.performance) {\n\t\tglobal.performance = {\n\t\t\tnow() {\n\t\t\t\tconst [sec, nsec] = process.hrtime();\n\t\t\t\treturn sec * 1000 + nsec / 1000000;\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!global.TextEncoder) {\n\t\tglobal.TextEncoder = require(\"util\").TextEncoder;\n\t}\n\n\tif (!global.TextDecoder) {\n\t\tglobal.TextDecoder = require(\"util\").TextDecoder;\n\t}\n\n\t// End of polyfills for common API.\n\n\tconst encoder = new TextEncoder(\"utf-8\");\n\tconst decoder = new TextDecoder(\"utf-8\");\n\tvar logLine = [];\n\n\tglobal.Go = class {\n\t\tconstructor() {\n\t\t\tthis._callbackTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst mem = () => {\n\t\t\t\t// The buffer may change when requesting more memory.\n\t\t\t\treturn new DataView(this._inst.exports.memory.buffer);\n\t\t\t}\n\n\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\tmem().setUint32(addr + 0, v, true);\n\t\t\t\tmem().setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t}\n\n\t\t\tconst getInt64 = (addr) => {\n\t\t\t\tconst low = mem().getUint32(addr + 0, true);\n\t\t\t\tconst high = mem().getInt32(addr + 4, true);\n\t\t\t\treturn low + high * 4294967296;\n\t\t\t}\n\n\t\t\tconst loadValue = (addr) => {\n\t\t\t\tconst f = mem().getFloat64(addr, true);\n\t\t\t\tif (f === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = mem().getUint32(addr, true);\n\t\t\t\treturn this._values[id];\n\t\t\t}\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tconst nanHead = 0x7FF80000;\n\n\t\t\t\tif (typeof v === \"number\") {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tmem().setUint32(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (v === 0) {\n\t\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tmem().setUint32(addr, 1, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tmem().setFloat64(addr, v, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (v) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\tmem().setFloat64(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase null:\n\t\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tmem().setUint32(addr, 2, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase true:\n\t\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tmem().setUint32(addr, 3, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase false:\n\t\t\t\t\t\tmem().setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tmem().setUint32(addr, 4, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = this._values.length;\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t}\n\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\tlet typeFlag = 1;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmem().setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\tmem().setUint32(addr, id, true);\n\t\t\t}\n\n\t\t\tconst loadSlice = (array, len, cap) => {\n\t\t\t\treturn new Uint8Array(this._inst.exports.memory.buffer, array, len);\n\t\t\t}\n\n\t\t\tconst loadSliceOfValues = (array, len, cap) => {\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\tconst loadString = (ptr, len) => {\n\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.memory.buffer, ptr, len));\n\t\t\t}\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\twasi_snapshot_preview1: {\n\t\t\t\t\t// https://github.com/WebAssembly/WASI/blob/main/phases/snapshot/docs.md#fd_write\n\t\t\t\t\tfd_write: function(fd, iovs_ptr, iovs_len, nwritten_ptr) {\n\t\t\t\t\t\tlet nwritten = 0;\n\t\t\t\t\t\tif (fd == 1) {\n\t\t\t\t\t\t\tfor (let iovs_i=0; iovs_i<iovs_len;iovs_i++) {\n\t\t\t\t\t\t\t\tlet iov_ptr = iovs_ptr+iovs_i*8; // assuming wasm32\n\t\t\t\t\t\t\t\tlet ptr = mem().getUint32(iov_ptr + 0, true);\n\t\t\t\t\t\t\t\tlet len = mem().getUint32(iov_ptr + 4, true);\n\t\t\t\t\t\t\t\tnwritten += len;\n\t\t\t\t\t\t\t\tfor (let i=0; i<len; i++) {\n\t\t\t\t\t\t\t\t\tlet c = mem().getUint8(ptr+i);\n\t\t\t\t\t\t\t\t\tif (c == 13) { // CR\n\t\t\t\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t\t\t\t} else if (c == 10) { // LF\n\t\t\t\t\t\t\t\t\t\t// write line\n\t\t\t\t\t\t\t\t\t\tlet line = decoder.decode(new Uint8Array(logLine));\n\t\t\t\t\t\t\t\t\t\tlogLine = [];\n\t\t\t\t\t\t\t\t\t\tconsole.log(line);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlogLine.push(c);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.error('invalid file descriptor:', fd);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmem().setUint32(nwritten_ptr, nwritten, true);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t},\n\t\t\t\t\tfd_close: () => 0,      // dummy\n\t\t\t\t\tfd_fdstat_get: () => 0, // dummy\n\t\t\t\t\tfd_seek: () => 0,       // dummy\n\t\t\t\t\t\"proc_exit\": (code) => {\n\t\t\t\t\t\tif (global.process) {\n\t\t\t\t\t\t\t// Node.js\n\t\t\t\t\t\t\tprocess.exit(code);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Can't exit in a browser.\n\t\t\t\t\t\t\tthrow 'trying to exit with code ' + code;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trandom_get: (bufPtr, bufLen) => {\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(bufPtr, bufLen));\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tenv: {\n\t\t\t\t\t// func ticks() float64\n\t\t\t\t\t\"runtime.ticks\": () => {\n\t\t\t\t\t\treturn timeOrigin + performance.now();\n\t\t\t\t\t},\n\n\t\t\t\t\t// func sleepTicks(timeout float64)\n\t\t\t\t\t\"runtime.sleepTicks\": (timeout) => {\n\t\t\t\t\t\t// Do not sleep, only reactivate scheduler after the given timeout.\n\t\t\t\t\t\tsetTimeout(this._inst.exports.go_scheduler, timeout);\n\t\t\t\t\t},\n\n\t\t\t\t\t// https://github.com/tinygo-org/tinygo/issues/1140#issuecomment-718145455\n\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t\"syscall/js.finalizeRef\": (v_addr) => {\n\t\t\t\t\t\t// Note: TinyGo does not support finalizers so this is only called\n\t\t\t\t\t\t// for one specific case, by js.go:jsString.\n\t\t\t\t\t\tconst id = mem().getUint32(v_addr, true);\n\t\t\t\t\t\tthis._goRefCounts[id]--;\n\t\t\t\t\t\tif (this._goRefCounts[id] === 0) {\n\t\t\t\t\t\t\tconst v = this._values[id];\n\t\t\t\t\t\t\tthis._values[id] = null;\n\t\t\t\t\t\t\tthis._ids.delete(v);\n\t\t\t\t\t\t\tthis._idPool.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\"syscall/js.stringVal\": (ret_ptr, value_ptr, value_len) => {\n\t\t\t\t\t\tconst s = loadString(value_ptr, value_len);\n\t\t\t\t\t\tstoreValue(ret_ptr, s);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\"syscall/js.valueGet\": (retval, v_addr, p_ptr, p_len) => {\n\t\t\t\t\t\tlet prop = loadString(p_ptr, p_len);\n\t\t\t\t\t\tlet value = loadValue(v_addr);\n\t\t\t\t\t\tlet result = Reflect.get(value, prop);\n\t\t\t\t\t\tstoreValue(retval, result);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\"syscall/js.valueSet\": (v_addr, p_ptr, p_len, x_addr) => {\n\t\t\t\t\t\tconst v = loadValue(v_addr);\n\t\t\t\t\t\tconst p = loadString(p_ptr, p_len);\n\t\t\t\t\t\tconst x = loadValue(x_addr);\n\t\t\t\t\t\tReflect.set(v, p, x);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t\"syscall/js.valueDelete\": (v_addr, p_ptr, p_len) => {\n\t\t\t\t\t\tconst v = loadValue(v_addr);\n\t\t\t\t\t\tconst p = loadString(p_ptr, p_len);\n\t\t\t\t\t\tReflect.deleteProperty(v, p);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\"syscall/js.valueIndex\": (ret_addr, v_addr, i) => {\n\t\t\t\t\t\tstoreValue(ret_addr, Reflect.get(loadValue(v_addr), i));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\"syscall/js.valueSetIndex\": (v_addr, i, x_addr) => {\n\t\t\t\t\t\tReflect.set(loadValue(v_addr), i, loadValue(x_addr));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueCall\": (ret_addr, v_addr, m_ptr, m_len, args_ptr, args_len, args_cap) => {\n\t\t\t\t\t\tconst v = loadValue(v_addr);\n\t\t\t\t\t\tconst name = loadString(m_ptr, m_len);\n\t\t\t\t\t\tconst args = loadSliceOfValues(args_ptr, args_len, args_cap);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst m = Reflect.get(v, name);\n\t\t\t\t\t\t\tstoreValue(ret_addr, Reflect.apply(m, v, args));\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(ret_addr, err);\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueInvoke\": (ret_addr, v_addr, args_ptr, args_len, args_cap) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(v_addr);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(args_ptr, args_len, args_cap);\n\t\t\t\t\t\t\tstoreValue(ret_addr, Reflect.apply(v, undefined, args));\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(ret_addr, err);\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueNew\": (ret_addr, v_addr, args_ptr, args_len, args_cap) => {\n\t\t\t\t\t\tconst v = loadValue(v_addr);\n\t\t\t\t\t\tconst args = loadSliceOfValues(args_ptr, args_len, args_cap);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstoreValue(ret_addr, Reflect.construct(v, args));\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(ret_addr, err);\n\t\t\t\t\t\t\tmem().setUint8(ret_addr+ 8, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\"syscall/js.valueLength\": (v_addr) => {\n\t\t\t\t\t\treturn loadValue(v_addr).length;\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\"syscall/js.valuePrepareString\": (ret_addr, v_addr) => {\n\t\t\t\t\t\tconst s = String(loadValue(v_addr));\n\t\t\t\t\t\tconst str = encoder.encode(s);\n\t\t\t\t\t\tstoreValue(ret_addr, str);\n\t\t\t\t\t\tsetInt64(ret_addr + 8, str.length);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\"syscall/js.valueLoadString\": (v_addr, slice_ptr, slice_len, slice_cap) => {\n\t\t\t\t\t\tconst str = loadValue(v_addr);\n\t\t\t\t\t\tloadSlice(slice_ptr, slice_len, slice_cap).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\"syscall/js.valueInstanceOf\": (v_addr, t_addr) => {\n \t\t\t\t\t\treturn loadValue(v_addr) instanceof loadValue(t_addr);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToGo\": (ret_addr, dest_addr, dest_len, dest_cap, source_addr) => {\n\t\t\t\t\t\tlet num_bytes_copied_addr = ret_addr;\n\t\t\t\t\t\tlet returned_status_addr = ret_addr + 4; // Address of returned boolean status variable\n\n\t\t\t\t\t\tconst dst = loadSlice(dest_addr, dest_len);\n\t\t\t\t\t\tconst src = loadValue(source_addr);\n\t\t\t\t\t\tif (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tmem().setUint8(returned_status_addr, 0); // Return \"not ok\" status\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(num_bytes_copied_addr, toCopy.length);\n\t\t\t\t\t\tmem().setUint8(returned_status_addr, 1); // Return \"ok\" status\n\t\t\t\t\t},\n\n\t\t\t\t\t// copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t// Originally copied from upstream Go project, then modified:\n\t\t\t\t\t//   https://github.com/golang/go/blob/3f995c3f3b43033013013e6c7ccc93a9b1411ca9/misc/wasm/wasm_exec.js#L404-L416\n\t\t\t\t\t\"syscall/js.copyBytesToJS\": (ret_addr, dest_addr, source_addr, source_len, source_cap) => {\n\t\t\t\t\t\tlet num_bytes_copied_addr = ret_addr;\n\t\t\t\t\t\tlet returned_status_addr = ret_addr + 4; // Address of returned boolean status variable\n\n\t\t\t\t\t\tconst dst = loadValue(dest_addr);\n\t\t\t\t\t\tconst src = loadSlice(source_addr, source_len);\n\t\t\t\t\t\tif (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tmem().setUint8(returned_status_addr, 0); // Return \"not ok\" status\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(num_bytes_copied_addr, toCopy.length);\n\t\t\t\t\t\tmem().setUint8(returned_status_addr, 1); // Return \"ok\" status\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tthis._inst = instance;\n\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\tNaN,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tglobal,\n\t\t\t\tthis,\n\t\t\t];\n\t\t\tthis._goRefCounts = []; // number of references that Go has to a JS value, indexed by reference id\n\t\t\tthis._ids = new Map();  // mapping from JS values to reference ids\n\t\t\tthis._idPool = [];      // unused ids that have been garbage collected\n\t\t\tthis.exited = false;    // whether the Go program has exited\n\n\t\t\tconst mem = new DataView(this._inst.exports.memory.buffer)\n\n\t\t\twhile (true) {\n\t\t\t\tconst callbackPromise = new Promise((resolve) => {\n\t\t\t\t\tthis._resolveCallbackPromise = () => {\n\t\t\t\t\t\tif (this.exited) {\n\t\t\t\t\t\t\tthrow new Error(\"bad callback: Go program has already exited\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetTimeout(resolve, 0); // make sure it is asynchronous\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tthis._inst.exports._start();\n\t\t\t\tif (this.exited) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tawait callbackPromise;\n\t\t\t}\n\t\t}\n\n\t\t_resume() {\n\t\t\tif (this.exited) {\n\t\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t\t}\n\t\t\tthis._inst.exports.resume();\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t}\n\n\t\t_makeFuncWrapper(id) {\n\t\t\tconst go = this;\n\t\t\treturn function () {\n\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n\t\t\t};\n\t\t}\n\t}\n\n\t// not relvant to our usage\n\n\t// if (\n\t// \tglobal.require &&\n\t// \tglobal.require.main === module &&\n\t// \tglobal.process &&\n\t// \tglobal.process.versions &&\n\t// \t!global.process.versions.electron\n\t// ) {\n\t// \tif (process.argv.length != 3) {\n\t// \t\tconsole.error(\"usage: go_js_wasm_exec [wasm binary] [arguments]\");\n\t// \t\tprocess.exit(1);\n\t// \t}\n\n\t// \tconst go = new Go();\n\t// \tWebAssembly.instantiate(fs.readFileSync(process.argv[2]), go.importObject).then((result) => {\n\t// \t\treturn go.run(result.instance);\n\t// \t}).catch((err) => {\n\t// \t\tconsole.error(err);\n\t// \t\tprocess.exit(1);\n\t// \t});\n\t// }\n})();\n"],"names":["global","window","self","Error","require","enosys","err","code","process","getuid","getgid","geteuid","getegid","getgroups","pid","ppid","umask","cwd","chdir","crypto","nodeCrypto","require$$0","getRandomValues","b","randomFillSync","performance","now","sec","nsec","hrtime","TextEncoder","require$$1","TextDecoder","encoder","decoder","logLine","Go","constructor","this","_callbackTimeouts","Map","_nextCallbackTimeoutID","mem","DataView","_inst","exports","memory","buffer","setInt64","addr","v","setUint32","Math","floor","loadValue","f","getFloat64","isNaN","id","getUint32","_values","storeValue","nanHead","setFloat64","undefined","_ids","get","_idPool","pop","length","_goRefCounts","set","typeFlag","loadSlice","array","len","cap","Uint8Array","loadSliceOfValues","a","Array","i","loadString","ptr","decode","timeOrigin","Date","importObject","wasi_snapshot_preview1","fd_write","fd","iovs_ptr","iovs_len","nwritten_ptr","nwritten","iovs_i","iov_ptr","c","getUint8","line","console","log","push","error","fd_close","fd_fdstat_get","fd_seek","proc_exit","exit","random_get","bufPtr","bufLen","env","timeout","setTimeout","go_scheduler","v_addr","delete","ret_ptr","value_ptr","value_len","s","retval","p_ptr","p_len","prop","value","result","Reflect","x_addr","p","x","deleteProperty","ret_addr","m_ptr","m_len","args_ptr","args_len","args_cap","name","args","m","apply","setUint8","construct","String","str","encode","slice_ptr","slice_len","slice_cap","t_addr","dest_addr","dest_len","dest_cap","source_addr","num_bytes_copied_addr","returned_status_addr","dst","src","Uint8ClampedArray","toCopy","subarray","source_len","source_cap","async","instance","NaN","exited","callbackPromise","Promise","resolve","_resolveCallbackPromise","_start","_resume","resume","_resolveExitPromise","_makeFuncWrapper","go","event","arguments","_pendingEvent"],"mappings":"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"}