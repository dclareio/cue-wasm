{"version":3,"file":"wasm_exec.full-118532ee.js","sources":["../lib/wasm_exec.full.js"],"sourcesContent":["// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n\"use strict\";\n\n(() => {\n\tconst enosys = () => {\n\t\tconst err = new Error(\"not implemented\");\n\t\terr.code = \"ENOSYS\";\n\t\treturn err;\n\t};\n\n\tif (!globalThis.fs) {\n\t\tlet outputBuf = \"\";\n\t\tglobalThis.fs = {\n\t\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\t\twriteSync(fd, buf) {\n\t\t\t\toutputBuf += decoder.decode(buf);\n\t\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\t\tif (nl != -1) {\n\t\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t\t}\n\t\t\t\treturn buf.length;\n\t\t\t},\n\t\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\t\tcallback(enosys());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\t\tcallback(null, n);\n\t\t\t},\n\t\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tclose(fd, callback) { callback(enosys()); },\n\t\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\t\tfstat(fd, callback) { callback(enosys()); },\n\t\t\tfsync(fd, callback) { callback(null); },\n\t\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tlink(path, link, callback) { callback(enosys()); },\n\t\t\tlstat(path, callback) { callback(enosys()); },\n\t\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\t\treaddir(path, callback) { callback(enosys()); },\n\t\t\treadlink(path, callback) { callback(enosys()); },\n\t\t\trename(from, to, callback) { callback(enosys()); },\n\t\t\trmdir(path, callback) { callback(enosys()); },\n\t\t\tstat(path, callback) { callback(enosys()); },\n\t\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\t\tunlink(path, callback) { callback(enosys()); },\n\t\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t\t};\n\t}\n\n\tif (!globalThis.process) {\n\t\tglobalThis.process = {\n\t\t\tgetuid() { return -1; },\n\t\t\tgetgid() { return -1; },\n\t\t\tgeteuid() { return -1; },\n\t\t\tgetegid() { return -1; },\n\t\t\tgetgroups() { throw enosys(); },\n\t\t\tpid: -1,\n\t\t\tppid: -1,\n\t\t\tumask() { throw enosys(); },\n\t\t\tcwd() { throw enosys(); },\n\t\t\tchdir() { throw enosys(); },\n\t\t}\n\t}\n\n\tif (!globalThis.crypto) {\n\t\tthrow new Error(\"globalThis.crypto is not available, polyfill required (crypto.getRandomValues only)\");\n\t}\n\n\tif (!globalThis.performance) {\n\t\tthrow new Error(\"globalThis.performance is not available, polyfill required (performance.now only)\");\n\t}\n\n\tif (!globalThis.TextEncoder) {\n\t\tthrow new Error(\"globalThis.TextEncoder is not available, polyfill required\");\n\t}\n\n\tif (!globalThis.TextDecoder) {\n\t\tthrow new Error(\"globalThis.TextDecoder is not available, polyfill required\");\n\t}\n\n\tconst encoder = new TextEncoder(\"utf-8\");\n\tconst decoder = new TextDecoder(\"utf-8\");\n\n\tglobalThis.Go = class {\n\t\tconstructor() {\n\t\t\tthis.argv = [\"js\"];\n\t\t\tthis.env = {};\n\t\t\tthis.exit = (code) => {\n\t\t\t\tif (code !== 0) {\n\t\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\t\tthis._resolveExitPromise = resolve;\n\t\t\t});\n\t\t\tthis._pendingEvent = null;\n\t\t\tthis._scheduledTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\tthis.mem.setUint32(addr + 0, v, true);\n\t\t\t\tthis.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t}\n\n\t\t\tconst getInt64 = (addr) => {\n\t\t\t\tconst low = this.mem.getUint32(addr + 0, true);\n\t\t\t\tconst high = this.mem.getInt32(addr + 4, true);\n\t\t\t\treturn low + high * 4294967296;\n\t\t\t}\n\n\t\t\tconst loadValue = (addr) => {\n\t\t\t\tconst f = this.mem.getFloat64(addr, true);\n\t\t\t\tif (f === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = this.mem.getUint32(addr, true);\n\t\t\t\treturn this._values[id];\n\t\t\t}\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tconst nanHead = 0x7FF80000;\n\n\t\t\t\tif (typeof v === \"number\" && v !== 0) {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.mem.setFloat64(addr, v, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (v === undefined) {\n\t\t\t\t\tthis.mem.setFloat64(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = this._values.length;\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t}\n\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\tlet typeFlag = 0;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase \"object\":\n\t\t\t\t\t\tif (v !== null) {\n\t\t\t\t\t\t\ttypeFlag = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\tthis.mem.setUint32(addr, id, true);\n\t\t\t}\n\n\t\t\tconst loadSlice = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t\t}\n\n\t\t\tconst loadSliceOfValues = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\tconst loadString = (addr) => {\n\t\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t\t}\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\tgo: {\n\t\t\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\n\t\t\t\t\t// func wasmExit(code int32)\n\t\t\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst code = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tthis.exited = true;\n\t\t\t\t\t\tdelete this._inst;\n\t\t\t\t\t\tdelete this._values;\n\t\t\t\t\t\tdelete this._goRefCounts;\n\t\t\t\t\t\tdelete this._ids;\n\t\t\t\t\t\tdelete this._idPool;\n\t\t\t\t\t\tthis.exit(code);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\t\t\tconst n = this.mem.getInt32(sp + 24, true);\n\t\t\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func resetMemoryDataView()\n\t\t\t\t\t\"runtime.resetMemoryDataView\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func nanotime1() int64\n\t\t\t\t\t\"runtime.nanotime1\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func walltime() (sec int64, nsec int32)\n\t\t\t\t\t\"runtime.walltime\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst msec = (new Date).getTime();\n\t\t\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\twhile (this._scheduledTimeouts.has(id)) {\n\t\t\t\t\t\t\t\t\t// for some reason Go failed to register the timeout event, log and try again\n\t\t\t\t\t\t\t\t\t// (temporary workaround for https://github.com/golang/go/issues/28975)\n\t\t\t\t\t\t\t\t\tconsole.warn(\"scheduleTimeoutEvent: missed timeout event\");\n\t\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t\t\t));\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, id, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func getRandomData(r []byte)\n\t\t\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t\"syscall/js.finalizeRef\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this.mem.getUint32(sp + 8, true);\n\t\t\t\t\t\tthis._goRefCounts[id]--;\n\t\t\t\t\t\tif (this._goRefCounts[id] === 0) {\n\t\t\t\t\t\t\tconst v = this._values[id];\n\t\t\t\t\t\t\tthis._values[id] = null;\n\t\t\t\t\t\t\tthis._ids.delete(v);\n\t\t\t\t\t\t\tthis._idPool.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t\"syscall/js.valueDelete\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tthis.mem.setUint8(sp + 24, (loadValue(sp + 8) instanceof loadValue(sp + 16)) ? 1 : 0);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToGo\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst dst = loadSlice(sp + 8);\n\t\t\t\t\t\tconst src = loadValue(sp + 32);\n\t\t\t\t\t\tif (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToJS\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst dst = loadValue(sp + 8);\n\t\t\t\t\t\tconst src = loadSlice(sp + 16);\n\t\t\t\t\t\tif (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t\"debug\": (value) => {\n\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tif (!(instance instanceof WebAssembly.Instance)) {\n\t\t\t\tthrow new Error(\"Go.run: WebAssembly.Instance expected\");\n\t\t\t}\n\t\t\tthis._inst = instance;\n\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\tNaN,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tglobalThis,\n\t\t\t\tthis,\n\t\t\t];\n\t\t\tthis._goRefCounts = new Array(this._values.length).fill(Infinity); // number of references that Go has to a JS value, indexed by reference id\n\t\t\tthis._ids = new Map([ // mapping from JS values to reference ids\n\t\t\t\t[0, 1],\n\t\t\t\t[null, 2],\n\t\t\t\t[true, 3],\n\t\t\t\t[false, 4],\n\t\t\t\t[globalThis, 5],\n\t\t\t\t[this, 6],\n\t\t\t]);\n\t\t\tthis._idPool = [];   // unused ids that have been garbage collected\n\t\t\tthis.exited = false; // whether the Go program has exited\n\n\t\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\t\tlet offset = 4096;\n\n\t\t\tconst strPtr = (str) => {\n\t\t\t\tconst ptr = offset;\n\t\t\t\tconst bytes = encoder.encode(str + \"\\0\");\n\t\t\t\tnew Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n\t\t\t\toffset += bytes.length;\n\t\t\t\tif (offset % 8 !== 0) {\n\t\t\t\t\toffset += 8 - (offset % 8);\n\t\t\t\t}\n\t\t\t\treturn ptr;\n\t\t\t};\n\n\t\t\tconst argc = this.argv.length;\n\n\t\t\tconst argvPtrs = [];\n\t\t\tthis.argv.forEach((arg) => {\n\t\t\t\targvPtrs.push(strPtr(arg));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst keys = Object.keys(this.env).sort();\n\t\t\tkeys.forEach((key) => {\n\t\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst argv = offset;\n\t\t\targvPtrs.forEach((ptr) => {\n\t\t\t\tthis.mem.setUint32(offset, ptr, true);\n\t\t\t\tthis.mem.setUint32(offset + 4, 0, true);\n\t\t\t\toffset += 8;\n\t\t\t});\n\n\t\t\t// The linker guarantees global data starts from at least wasmMinDataAddr.\n\t\t\t// Keep in sync with cmd/link/internal/ld/data.go:wasmMinDataAddr.\n\t\t\tconst wasmMinDataAddr = 4096 + 8192;\n\t\t\tif (offset >= wasmMinDataAddr) {\n\t\t\t\tthrow new Error(\"total length of command line and environment variables exceeds limit\");\n\t\t\t}\n\n\t\t\tthis._inst.exports.run(argc, argv);\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t\tawait this._exitPromise;\n\t\t}\n\n\t\t_resume() {\n\t\t\tif (this.exited) {\n\t\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t\t}\n\t\t\tthis._inst.exports.resume();\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t}\n\n\t\t_makeFuncWrapper(id) {\n\t\t\tconst go = this;\n\t\t\treturn function () {\n\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n\t\t\t};\n\t\t}\n\t}\n})();\n"],"names":["err","Error","code","globalThis","fs","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","decoder","decode","nl","lastIndexOf","console","log","substr","length","write","offset","position","callback","this","enosys","chmod","path","mode","chown","uid","gid","close","fchmod","fchown","fstat","fsync","ftruncate","lchown","link","lstat","mkdir","perm","open","flags","read","buffer","readdir","readlink","rename","from","to","rmdir","stat","symlink","truncate","unlink","utimes","atime","mtime","process","getuid","getgid","geteuid","getegid","getgroups","pid","ppid","umask","cwd","chdir","crypto","performance","TextEncoder","TextDecoder","Go","constructor","argv","env","exit","warn","_exitPromise","resolve","_resolveExitPromise","_pendingEvent","_scheduledTimeouts","Map","_nextCallbackTimeoutID","setInt64","addr","v","mem","setUint32","Math","floor","getInt64","getUint32","getInt32","loadValue","f","getFloat64","isNaN","id","_values","storeValue","nanHead","setFloat64","undefined","_ids","get","_idPool","pop","_goRefCounts","set","typeFlag","loadSlice","array","len","Uint8Array","_inst","exports","loadSliceOfValues","a","Array","i","loadString","saddr","Date","now","importObject","go","sp","exited","p","n","DataView","timeOrigin","getTime","msec","setInt32","setTimeout","_resume","has","clearTimeout","delete","getRandomValues","push","result","Reflect","getsp","deleteProperty","m","args","apply","setUint8","construct","parseInt","str","encoder","encode","String","dst","src","Uint8ClampedArray","subarray","toCopy","debug","value","async","instance","Instance","NaN","fill","Infinity","bytes","ptr","argc","forEach","arg","argvPtrs","strPtr","Object","keys","sort","key","run","resume","_makeFuncWrapper","arguments","event"],"mappings":"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"}